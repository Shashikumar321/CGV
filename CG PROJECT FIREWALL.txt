#include<GL/glut.h>

float p1 = 180.0;
float p11 = 0.0;
float p12 = 0.0;

float p2 = 150.0;
float p21 = 0.0;
float p22 = 0.0;

float p3 = 120.0;
float p31 = 0.0;
float p32 = 0.0;

float p4 = 90.0;
float p41 = 0.0;
float p42 = 0.0;

float p5 = 60.0;
float p51 = 0.0;
float p52 = 0.0;

char str1[] = "INTERNET";
char str2[] = "accepted packets";
char str3[] = "rejected packets";
char str4[] = "FIREWALL";


void packet1();
void packet2();
void firstdisplay();
void keys(unsigned char , int , int );
void display();
void animation();



void keys(unsigned char key, int x, int y)
{
	if (key == 13)
	{
		glutDisplayFunc(display);
	}
}


void firstdisplay()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 1299.0, 0.0, 699.0);


	glPushMatrix();
	char d1[] = "WELCOME";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(570, 610.0);
	for (int i = 0; i < 9; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d1[i]);
	}
	glPopMatrix();



	glPushMatrix();
	char d2[] = "FIREWALL : PACKET FILTERING";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(450.0, 580.0);
	for (int i = 0; i < 28; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d2[i]);
	}
	glPopMatrix();



	glPushMatrix();
	char d3[] = "Submitted by : ";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(570, 420.0);
	for (int i = 0; i < 16; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d3[i]);
	}
	glPopMatrix();



	glPushMatrix();
	char d4[] = "SHIVANANDA ";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(570, 380.0);
	for (int i = 0; i < 12; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d4[i]);
	}
	glPopMatrix();



	glPushMatrix();
	char d5[] = "1MJ14CS138";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(570, 340.0);
	for (int i = 0; i < 11; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d5[i]);
	}
	glPopMatrix();




	glPushMatrix();
	char d6[] = "6th sem 'C' sec";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(560, 300.0);
	for (int i = 0; i < 16; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d6[i]);
	}
	glPopMatrix();



	glPushMatrix();
	char d7[] = "MVJCE";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(580, 260.0);
	for (int i = 0; i < 11; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d7[i]);
	}
	glPopMatrix();


	glPushMatrix();
	char d8[] = "PRESS  ENTER  KEY";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(520, 100.0);
	for (int i = 0; i < 18; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d8[i]);
	}
	glPopMatrix();

	glPushMatrix();
	char d9[] = "PRESS  ENTER  KEY";
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(521, 99.0);
	for (int i = 0; i < 18; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, d9[i]);
	}
	glPopMatrix();




	glFlush();



}


void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	//internet
	glPushMatrix();
	glColor3f(0.0,1.0,1.0);
	glBegin(GL_POLYGON);
	glVertex2f(30.0,250.0);
	glVertex2f(30.0, 400.0);
	glVertex2f(230.0, 400.0);
	glVertex2f(230.0, 250.0);
	glEnd();
	glPopMatrix();

	//test internet
	glPushMatrix();
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(72.0, 410.0);
	for (int i = 0; i < 9; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, str1[i]);
	}
	glPopMatrix();



	//accept
	glPushMatrix();
	glColor3f(0.0, 0.6, 0.3);
	glBegin(GL_POLYGON);
	glVertex2f(1050.0, 495.0);
	glVertex2f(1050.0, 625.0);
	glVertex2f(1230.0, 625.0);
	glVertex2f(1230.0, 495.0);
	glEnd();
	glPopMatrix();


	// text accepted packets
	glPushMatrix();
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(1060.0, 630.0);
	for (int i = 0; i < 20; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, str2[i]);
	}
	glPopMatrix();



	//reject
	glPushMatrix();
	glColor3f(0.6, 0.3, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(1050.0, 20.0);
	glVertex2f(1050.0, 150.0);
	glVertex2f(1230.0, 150.0);
	glVertex2f(1230.0, 20.0);
	glEnd();
	glPopMatrix();


	// text rejectedted packets
	glPushMatrix();
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(1060.0, 155.0);
	for (int i = 0; i < 20; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, str3[i]);
	}
	glPopMatrix();



	//p1
	glPushMatrix();
	glTranslatef(0.0, 320.0, 0.0);

	glTranslatef(p1, 0.0, 0.0);
	p1 += 0.23;
	if (p1 > 700)
	{
		p1 = 700;
		glTranslatef(p11, p12, 0.0);
		p11 += 0.18;
		p12 += 0.12;
		if (p11 > 360)
		{
			p11= 470;
			p12 = 230;
		}
	}
	packet1();
	glPopMatrix();


	//p2
	glPushMatrix();
	glTranslatef(0.0, 320.0, 0.0);

	glTranslatef(p2, 0.0, 0.0);
	p2 += 0.23;
	if (p2 > 700)
	{
		p2 = 700;
		glTranslatef(p21, -p22, 0.0);
		p21 += 0.18;
		p22 += 0.14;
		if (p21 > 360)
		{
			p21 = 470;
			p22 = 250;
		}
	}
	packet2();
	glPopMatrix();


	

	//p3
	glPushMatrix();
	glTranslatef(0.0, 320.0, 0.0);

	glTranslatef(p3, 0.0, 0.0);
	p3 += 0.23;
	if (p3 > 700)
	{
		p3 = 700;
		glTranslatef(p31, p32, 0.0);
		p31 += 0.18;
		p32 += 0.12;
		if (p31 > 270)
		{
			p31 = 430;
			p32 = 230;
		}
	}
	packet1();
	glPopMatrix();

	//p4
	glPushMatrix();
	glTranslatef(0.0, 320.0, 0.0);

	glTranslatef(p4, 0.0, 0.0);
	p4 += 0.23;
	if (p4 > 700)
	{
		p4 = 700;
		glTranslatef(p41, -p42, 0.0);
		p41 += 0.18;
		p42 += 0.14;
		if (p41 > 330)
		{
			p41 = 400;
			p42 = 250;
		}
	}
	packet2();
	glPopMatrix();



	//p5
	glPushMatrix();
	glTranslatef(0.0, 320.0, 0.0);

	glTranslatef(p5, 0.0, 0.0);
	p5 += 0.23;
	if (p5 > 700)
	{
		p5 = 700;
		glTranslatef(p51, p52, 0.0);
		p51 += 0.18;
		p52 += 0.12;
		if (p51 > 280)
		{
			p51 = 390;
			p52 = 230;
		}
	}
	packet1();
	glPopMatrix();

	



	//line2

	glColor3f(0.0, 0.0, 0.0);
	glLineWidth(2.0);
	glBegin(GL_LINES);
	glVertex2f(685.0, 325.0);
	glVertex2f(1050.0, 570.0);
	glEnd();
	glPopMatrix();



	//line3

	glColor3f(0.0, 0.0, 0.0);
	glLineWidth(2.0);
	glBegin(GL_LINES);
	glVertex2f(685.0, 320.0);
	glVertex2f(1050.0, 85.0);
	glEnd();
	glPopMatrix();



	
	//wall
	//front view
	glPushMatrix();
	glColor3f(0.38,0.0,0.0);
	glBegin(GL_POLYGON);
	glVertex2f(700.0, 70.0);
	glVertex2f(700.0, 500.0);
	glVertex2f(725.0, 500.0);
	glVertex2f(725.0, 70.0);
	glEnd();
	//left view
	glColor3f(0.59,0.09,0.04);
	glBegin(GL_POLYGON);
	glVertex2f(700.0, 70.0);
	glVertex2f(700.0, 500.0);
	glVertex2f(600.0, 590.0);
	glVertex2f(600.0, 160.0);
	glEnd();
	glPopMatrix();

	//top veiw
	glColor3f(0.69, 0.18, 0.02);
	glBegin(GL_POLYGON);
	glVertex2f(700.0, 500.0);
	glVertex2f(725.0, 500.0);
	glVertex2f(623.0, 590.0);
	glVertex2f(600.0, 590.0);
	glEnd();
	glPopMatrix();


	//text firewall
	glPushMatrix();
	glColor3f(0.0, 0.0, 0.0);
	glRasterPos2f(560.0, 595.0);
	for (int i = 0; i < 9; i++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, str4[i]);
	}
	glPopMatrix();



	//line1

	glColor3f(0.0, 0.0, 0.0);
	glLineWidth(4.0);
	glBegin(GL_LINES);
	glVertex2f(230.0, 320.0);
	glVertex2f(645.0, 320.0);
	glEnd();
	glPopMatrix();






	glFlush();

}


void packet1()
{
	//front view
	glColor3f(0.0, 1.0, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(0.0, 0.0);
	glVertex2f(0.0, 20.0);
	glVertex2f(20.0, 20.0);
	glVertex2f(20.0, 0.0);
	glEnd();

	//right view
	glColor3f(0.0, 0.95, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(20.0, 0.0);
	glVertex2f(20.0, 20.0);
	glVertex2f(25.0, 25.0);
	glVertex2f(25.0, 5.0);
	glEnd();


	//top view
	glColor3f(0.0, 0.90, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(20.0, 20.0);
	glVertex2f(25.0, 25.0);
	glVertex2f(5.0, 25.0);
	glVertex2f(0.0, 20.0);
	glEnd();
	glPopMatrix();

}


void packet2()
{
	
	//front view
	glColor3f(1.0, 0.0, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(0.0, 0.0);
	glVertex2f(0.0, 20.0);
	glVertex2f(20.0, 20.0);
	glVertex2f(20.0, 0.0);
	glEnd();

	//right view
	glColor3f(0.95, 0.0, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(20.0, 0.0);
	glVertex2f(20.0, 20.0);
	glVertex2f(25.0, 25.0);
	glVertex2f(25.0, 5.0);
	glEnd();


	//top view
	glColor3f(0.9, 0.0, 0.0);
	glBegin(GL_POLYGON);
	glVertex2f(20.0, 20.0);
	glVertex2f(25.0, 25.0);
	glVertex2f(5.0, 25.0);
	glVertex2f(0.0, 20.0);
	glEnd();
	glPopMatrix();


}




void myinit()
{

	glClearColor(0.9846, 0.8, 0.9, 1.0);

}

void anim()
{

	glutPostRedisplay();

}

void reshape(int w, int h)
{
	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 1299.0, 0.0, 699.0);

}

void mainmenu(GLint)
{

}

void reset(GLint)
{


	 p1 = 180.0;
	 p11 = 0.18;
	 p12 = 0.18;

	 p2 = 150.0;
	 p21 = 0.18;
	 p22 = 0.18;

	 p3 = 120.0;
	 p31 = 0.18;
	 p32 = 0.18;


	 p4 = 90.0;
	 p41 = 0.18;
	 p42 = 0.18;
	 
	 p5 = 60.0;
	 p51 = 0.18;
	 p52 = 0.18;



}

void animation(GLint ch)
{
	switch (ch)
	{
	case 1:glutIdleFunc(NULL);
		break;

	case 2:glutIdleFunc(anim);
		break;

	case 3:exit(0);
	}

}

void exit()
{
	exit(0);
}

int main(int agrc, char** agrv)
{
	GLint r;
	GLint e;
	GLint ani;

	glutInit(&agrc, agrv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(1300, 700);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("FIREWALL : PACKET FILTERING");
	myinit();
	glutDisplayFunc(firstdisplay);
	glutIdleFunc(anim);
	glutReshapeFunc(reshape);
	glutKeyboardFunc(keys);

	r = glutCreateMenu(reset);
	glutAddMenuEntry(" reset", 1);

	e = glutCreateMenu(exit);
	glutAddMenuEntry(" exit", 1);

	ani=glutCreateMenu(animation);
	glutAddMenuEntry("Stop Animation", 1);
	glutAddMenuEntry("Start Animation", 2);


	glutCreateMenu(mainmenu);
	glutAddSubMenu("  RESET PACKETS ", r);
	glutAddSubMenu("  ANIMATION ", ani);
	glutAddSubMenu("  EXIT  ", e);
	glutAttachMenu(GLUT_RIGHT_BUTTON);


	glutMainLoop();
	return 0;
}